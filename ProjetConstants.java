/* Generated By:JJTree&JavaCC: Do not edit this line. ProjetConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ProjetConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IF = 5;
  /** RegularExpression Id. */
  int FOR = 6;
  /** RegularExpression Id. */
  int THEN = 7;
  /** RegularExpression Id. */
  int ELSE = 8;
  /** RegularExpression Id. */
  int DO = 9;
  /** RegularExpression Id. */
  int WHILE = 10;
  /** RegularExpression Id. */
  int BREAK = 11;
  /** RegularExpression Id. */
  int SWITCH = 12;
  /** RegularExpression Id. */
  int CASE = 13;
  /** RegularExpression Id. */
  int RETURN = 14;
  /** RegularExpression Id. */
  int INT = 15;
  /** RegularExpression Id. */
  int CHAR = 16;
  /** RegularExpression Id. */
  int FLOAT = 17;
  /** RegularExpression Id. */
  int PARAL = 18;
  /** RegularExpression Id. */
  int PARAR = 19;
  /** RegularExpression Id. */
  int ACCOL = 20;
  /** RegularExpression Id. */
  int ACCOR = 21;
  /** RegularExpression Id. */
  int BL = 22;
  /** RegularExpression Id. */
  int BR = 23;
  /** RegularExpression Id. */
  int EGAL = 24;
  /** RegularExpression Id. */
  int PVIRG = 25;
  /** RegularExpression Id. */
  int POINT = 26;
  /** RegularExpression Id. */
  int NOT = 27;
  /** RegularExpression Id. */
  int VIRG = 28;
  /** RegularExpression Id. */
  int DPOINT = 29;
  /** RegularExpression Id. */
  int TRUE = 30;
  /** RegularExpression Id. */
  int FALSE = 31;
  /** RegularExpression Id. */
  int INCR = 32;
  /** RegularExpression Id. */
  int DECR = 33;
  /** RegularExpression Id. */
  int PLUS = 34;
  /** RegularExpression Id. */
  int MINUS = 35;
  /** RegularExpression Id. */
  int MULT = 36;
  /** RegularExpression Id. */
  int DIV = 37;
  /** RegularExpression Id. */
  int MOD = 38;
  /** RegularExpression Id. */
  int AND = 39;
  /** RegularExpression Id. */
  int OR = 40;
  /** RegularExpression Id. */
  int SHARP = 41;
  /** RegularExpression Id. */
  int INCLUDE = 42;
  /** RegularExpression Id. */
  int EXTENSI = 43;
  /** RegularExpression Id. */
  int STRUCT = 44;
  /** RegularExpression Id. */
  int ENUM = 45;
  /** RegularExpression Id. */
  int INTEGER = 46;
  /** RegularExpression Id. */
  int IDENT = 47;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"if\"",
    "\"for\"",
    "\"then\"",
    "\"else\"",
    "\"do\"",
    "\"while\"",
    "\"break\"",
    "\"switch\"",
    "\"case\"",
    "\"return\"",
    "\"int\"",
    "\"char\"",
    "\"float\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"<\"",
    "\">\"",
    "\"=\"",
    "\";\"",
    "\".\"",
    "\"!\"",
    "\",\"",
    "\":\"",
    "\"true\"",
    "\"false\"",
    "\"++\"",
    "\"--\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"&\"",
    "\"|\"",
    "\"#\"",
    "\"include\"",
    "\".h\"",
    "\"struct\"",
    "\"enum\"",
    "<INTEGER>",
    "<IDENT>",
  };

}
